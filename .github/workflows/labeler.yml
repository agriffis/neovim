name: "Pull Request Labeler"
on:
  pull_request_target:
    types: [opened]
jobs:

  triage:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
    - uses: actions/labeler@main
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"

  type-scope:
    runs-on: ubuntu-latest
    needs: ["triage"]
    permissions:
      contents: write
      pull-requests: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_REPO: ${{ github.repository }}
      PR_NUMBER: ${{ github.event.pull_request.number }}
      PR_TITLE: ${{ github.event.pull_request.title }}
    steps:
    - name: "Extract commit type and add as label"
      continue-on-error: true
      run: gh pr edit "$PR_NUMBER" --add-label "$(echo "$PR_TITLE" | sed -E 's|([[:alpha:]]+)(\(.*\))?!?:.*|\1|')"
    - name: "Extract commit scope and add as label"
      continue-on-error: true
      run: gh pr edit "$PR_NUMBER" --add-label "$(echo "$PR_TITLE" | sed -E 's|[[:alpha:]]+\((.+)\)!?:.*|\1|')"

  add-reviewer:
    runs-on: ubuntu-latest
    needs: ["triage", "type-scope"]
    permissions:
      pull-requests: write
    steps:
      - uses: actions/github-script@v5
        with:
          script: |
            const reviewers = []

            const { data: { labels } } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            })
            const label_names = labels.map(label => label.name)

            if (label_names.includes('ci')) {
              reviewers.push("jamessan")
            }

            if (label_names.includes('vim-patch')) {
              reviewers.push("seandewar")
            }

            const index = reviewers.indexOf(context.actor);
            if (index > -1) {
              reviewers.splice(index, 1);
            }

            github.rest.pulls.requestReviewers({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              reviewers: reviewers
            });
